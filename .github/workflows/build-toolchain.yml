name: Build tools and Toolchain
on:
  workflow_dispatch:
    inputs:
      repo_url:
        type: string
      repo_branch:
        type: string
      config_name:
        type: string
  
  workflow_call:
    inputs:
      repo_url:
        type: string
      repo_branch:
        type: string
      config_name:
        type: string

env:
  REPO_URL: ${{ github.event.inputs.repo_url || 'hanwckf/immortalwrt-mt798x' }}
  REPO_BRANCH: ${{ github.event.inputs.repo_branch || 'openwrt-21.02' }}
  CONFIG_FILE: ${{ github.event.inputs.config_name || '.config7981'}}
jobs:
  determine_targets:
    name: Determine targets
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.find_targets.outputs.target }}
      subtarget: ${{ steps.find_targets.outputs.subtarget }}
      arch: ${{ steps.find_targets.outputs.arch }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Checkoutsrc
      uses: actions/checkout@v3
      with:
        repository: ${{ env.REPO_URL }}
        ref: ${{ env.REPO_BRANCH}}
        path: openwrt      
    - name: Find targets
      id: find_targets
      run: |
        [[ -d "files" ]] && mv -f files openwrt/files
        [[ -e ${CONFIG_FILE} ]] && cp -f ${CONFIG_FILE} openwrt/.config
        cd openwrt
        make defconfig
        eval "$(grep \
                  -e ^CONFIG_TARGET_BOARD= \
                  -e ^CONFIG_TARGET_SUBTARGET= \
                  -e ^CONFIG_ARCH= \
                  .config 2>/dev/null \
         )"
        TARGET=${TARGET:-$CONFIG_TARGET_BOARD}
        SUBTARGET=${SUBTARGET:-$CONFIG_TARGET_SUBTARGET}
        ARCH=${ARCH:-$CONFIG_ARCH}
        [[ -n ${TARGET} ]] && echo "target=$TARGET" >> ${GITHUB_OUTPUT}
        [[ -n ${SUBTARGET} ]] && echo "subtarget=$SUBTARGET" >> ${GITHUB_OUTPUT}
        [[ -n ${ARCH} ]] && echo "arch=$ARCH" >> ${GITHUB_OUTPUT}
        echo $TARGET $SUBTARGET $ARCH
  build:
    name: Build tools
    runs-on: ubuntu-latest
    needs: determine_targets
    env: 
      TARGET: ${{ needs.determine_targets.outputs.target }}
      SUBTARGET: ${{ needs.determine_targets.outputs.subtarget }}
      ARCH: ${{ needs.determine_targets.outputs.arch }}
    steps:
      - name: Checkoutsrc
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO_URL }}
          ref: ${{ env.REPO_BRANCH}}
          path: openwrt

      - name: Cache prebuilt tools and toolchain
        uses: actions/cache@v3
        with:
          path: openwrt/tools.tar
          key: ${{ env.TARGET }}-${{ env.SUBTARGET }}-external-toolchain-${{ hashFiles('openwrt/tools/**','openwrt/toolchain/**') }}
          restore-keys: ${{ env.TARGET }}-${{ env.SUBTARGET }}-external-toolchain-

      - name: Set global configs
        working-directory: openwrt
        run: |
          touch .config
          echo CONFIG_DEVEL=y >> .config
          echo CONFIG_AUTOREMOVE=y >> .config
          echo CONFIG_CCACHE=y >> .config
          echo "CONFIG_TARGET_${{ env.TARGET }}=y" >> .config
          echo "CONFIG_TARGET_${{ env.TARGET }}_${{ env.SUBTARGET }}=y" >> .config
          echo CONFIG_BUILD_ALL_HOST_TOOLS=y >> .config

      - name: Make prereq
        working-directory: openwrt
        run: make defconfig
  
      - name: Show configuration
        working-directory: openwrt
        run: ./scripts/diffconfig.sh

      - name: Build tools 
        working-directory: openwrt
        run: make tools/install -j$(nproc) BUILD_LOG=1 || ret=$? .github/workflows/scripts/show_build_failures.sh

      - name: Build toolchain
        working-directory: openwrt
        run: make toolchain/install -j$(nproc) BUILD_LOG=1 || ret=$? .github/workflows/scripts/show_build_failures.sh

      - name: Build external toolchain
        working-directory: openwrt
        run: |
          make target/toolchain/compile -j$(nproc) BUILD_LOG=1 || ret=$? .github/workflows/scripts/show_build_failures.sh
          TOOLCHAIN_NAME=$(ls bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }} | grep toolchain)
          echo "toolchain-name=$TOOLCHAIN_NAME" >> $GITHUB_ENV
          mkdir -p external-toolchain && cp -f bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/$TOOLCHAIN_NAME external-toolchain/$TOOLCHAIN_NAME

      - name: Upload prebuilt toolchain
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TARGET }}-${{ env.SUBTARGET }}-external-toolchain
          path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${{ env.toolchain-name }}

      - name: Package tools 
        working-directory: openwrt
        run: tar -cvf tools.tar staging_dir/host build_dir/host staging_dir/target-* external-toolchain

      - name: Upload prebuilt tools
        uses: actions/upload-artifact@v3
        with:
          name: linux-buildbot-prebuilt-tools
          path: openwrt/tools.tar

      - name: Upload logs
        if: ${{!cancelled()}}
        uses: actions/upload-artifact@v3
        with:
          name: linux-buildbot-logs
          path: openwrt/logs

      - name: Upload config
        if: ${{!cancelled()}}
        uses: actions/upload-artifact@v3
        with:
          name: linux-buildbot-config
          path: openwrt/.config
  
